chimp_var_pval_2 <- array(NA, dim = c(10304, 1))
for(i in 1:10304){
x <- t(mean_tech_reps[i,11:16])
y <- t(mean_tech_reps[i,21:26])
htest <- var.test(x, y, alternative = c("two.sided"))
chimp_var_ratio_2[i,1] <- htest$estimate
chimp_var_pval_2[i,1] <- htest$p.value
}
chimp_var_ratio_2[chimp_var_ratio_2 > 1] <- 1
chimp_var_ratio_2[chimp_var_ratio_2 < 1] <- 0
comb_dir_pval <- as.data.frame(cbind(chimp_var_pval_2, chimp_var_ratio_2))
colnames(comb_dir_pval) <- c("pval", "dir_change_var")
h12s2 <- ggplot(comb_dir_pval, aes(x = pval, fill = as.factor(dir_change_var))) + geom_histogram(position = "stack", binwidth = 0.02) + theme_bw()  + scale_fill_manual(values= c("red", "blue"), name = c("Direction of Variation"), labels = c("Decrease in Variation", "Increase in Variation")) + ggtitle("Two-sided Humans Day 1 to 2")
h12s2
h01s2
h12s2
h01s1
h01s2
h12s2
c01s1
c01s2
c12s2
?Cormotif
??Cormotif
?var.test
i = 1
cor(HC_var_exp_check_cor[1:10304,i], HC_var_resid_check_cor[1:10304,i])
cor(HC_var_exp_check_cor[10305:20608,i], HC_var_resid_check_cor[10305:20608,i])
cor(HC_var_exp_check_cor[20609:30912,i], HC_var_resid_check_cor[20609:30912,i])
cor(HC_var_exp_check_cor[30913:41216,i], HC_var_resid_check_cor[30913:41216,i])
cor(HC_var_exp_check_cor[41217:51520,i], HC_var_resid_check_cor[41217:51520,i])
cor(HC_var_exp_check_cor[51521:61824,i], HC_var_resid_check_cor[51521:61824,i])
cor(HC_var_exp_check_cor[61825:72128,i], HC_var_resid_check_cor[61825:72128,i])
cor(HC_var_exp_check_cor[72129:82432,i], HC_var_resid_check_cor[72129:82432,i])
library("ggplot2")
library("qvalue")
source("~/Desktop/Endoderm_TC/ashlar-trial/analysis/chunk-options.R")
library("RColorBrewer")
# Load colors
pal <- c(brewer.pal(9, "Set1"), brewer.pal(8, "Set2"), brewer.pal(12, "Set3"))
# Load functions
bjpm<-
theme(
panel.border = element_rect(colour = "black", fill = NA, size = 2),
plot.title = element_text(size = 16, face = "bold"),
axis.text.y =  element_text(size = 14,face = "bold",color = "black"),
axis.text.x =  element_text(size = 14,face = "bold",color = "black"),
axis.title.y = element_text(size = 14,face = "bold"),
axis.title.x=element_blank(),
legend.text = element_text(size = 14,face = "bold"),
legend.title = element_text(size = 14,face = "bold"),
strip.text.x = element_text(size = 14,face = "bold"),
strip.text.y = element_text(size = 14,face = "bold"),
strip.background = element_rect(colour = "black", size = 2))
bjp<-
theme(
axis.text.y =  element_text(size = 9,face = "bold",color = "black"),
axis.title.y = element_text(size = 10,face = "bold",color = "black"),
axis.text.x =  element_text(size = 9,face = "bold",color = "black"),
axis.title.x = element_text(size = 10,face = "bold",color = "black"),
plot.title = element_text(size = 13, face = "bold"))
Endo_TC_Data_Share_Sorting <- read.csv("../data/Purity_Endo_TC_Data_Share_Sorting.csv", header = TRUE)
Endo_TC_Data_Share_Sorting <- Endo_TC_Data_Share_Sorting[1:63,1:43]
# Get only samples with purity
samples_with_purity <- Endo_TC_Data_Share_Sorting[!is.na(Endo_TC_Data_Share_Sorting["High_Conf_Purity"]),]
dim(samples_with_purity)
# Sort into humans with purity
humans_with_purity <- samples_with_purity[which(samples_with_purity$Species == "human"),]
dim(humans_with_purity)
# Make the dataset simplier
collect_info <- c(1,3,5,6,10,13,17)
humans_with_purity <- humans_with_purity[,collect_info]
Artery_Coronary_Analysis.v6p.normalized.expression <- read.delim("~/Desktop/Artery_Coronary_Analysis.v6p.normalized.expression.R")
View(Artery_Coronary_Analysis.v6p.normalized.expression)
Cells_EBV.transformed_lymphocytes_Analysis.v6p.normalized.expression.3 <- read.delim("~/Desktop/Cells_EBV-transformed_lymphocytes_Analysis.v6p.normalized.expression 3.R")
View(Cells_EBV.transformed_lymphocytes_Analysis.v6p.normalized.expression.3)
colnames(Artery_Coronary_Analysis.v6p.normalized.expression)
colnames(Cells_EBV.transformed_lymphocytes_Analysis.v6p.normalized.expression.3)
intersect(colnames(Cells_EBV.transformed_lymphocytes_Analysis.v6p.normalized.expression.3), colnames(Artery_Coronary_Analysis.v6p.normalized.expression))
rm(Artery_Coronary_Analysis.v6p.normalized.expression)
Pancreas_Analysis.v6p.normalized.expression <- read.delim("~/Desktop/Pancreas_Analysis.v6p.normalized.expression.R")
View(Pancreas_Analysis.v6p.normalized.expression)
Heart_Left_Ventricle_Analysis.v6p.normalized.expression <- read.delim("~/Desktop/Heart_Left_Ventricle_Analysis.v6p.normalized.expression.R")
View(Heart_Left_Ventricle_Analysis.v6p.normalized.expression)
Liver_Analysis.v6p.normalized.expression <- read.delim("~/Desktop/Liver_Analysis.v6p.normalized.expression.R")
View(Liver_Analysis.v6p.normalized.expression)
Lung_Analysis.v6p.normalized.expression <- read.delim("~/Desktop/Lung_Analysis.v6p.normalized.expression.R")
View(Lung_Analysis.v6p.normalized.expression)
intersect(intersect(intersect(intersect(colnames(Cells_EBV.transformed_lymphocytes_Analysis.v6p.normalized.expression.3, colnames(Heart_Left_Ventricle_Analysis.v6p.normalized.expression)), colnames(Pancreas_Analysis.v6p.normalized.expression)), colnames(Liver_Analysis.v6p.normalized.expression)), colnames(Lung_Analysis.v6p.normalized.expression))
)
intersect(colnames(Cells_EBV.transformed_lymphocytes_Analysis.v6p.normalized.expression.3, colnames(Heart_Left_Ventricle_Analysis.v6p.normalized.expression))
)
intersect(intersect(intersect(intersect(colnames(Cells_EBV.transformed_lymphocytes_Analysis.v6p.normalized.expression.3), colnames(Heart_Left_Ventricle_Analysis.v6p.normalized.expression)), colnames(Pancreas_Analysis.v6p.normalized.expression)), colnames(Liver_Analysis.v6p.normalized.expression)), colnames(Lung_Analysis.v6p.normalized.expression)))
intersect(intersect(intersect(intersect(colnames(Cells_EBV.transformed_lymphocytes_Analysis.v6p.normalized.expression.3), colnames(Heart_Left_Ventricle_Analysis.v6p.normalized.expression)), colnames(Pancreas_Analysis.v6p.normalized.expression)), colnames(Liver_Analysis.v6p.normalized.expression)), colnames(Lung_Analysis.v6p.normalized.expression))
library(dplyr)
indiv_col <- c(1:4, "GTEX.WFON", "GTEX.X3Y1", "GTEX.Y5V5", "GTEX.YEC4", "GTEX.ZPU1", "GTEX.ZTPG")
select(indiv_col)
Cells_EBV.transformed_lymphocytes_Analysis.v6p.normalized.expression.3 %>%
select(indiv_col)
indiv_col <- c("X.chr", "start", "end", "gene_id", "GTEX.WFON", "GTEX.X3Y1", "GTEX.Y5V5", "GTEX.YEC4", "GTEX.ZPU1", "GTEX.ZTPG")
LCL <- Cells_EBV.transformed_lymphocytes_Analysis.v6p.normalized.expression.3[,indiv_col]
head(LCL)
heart <- Heart_Left_Ventricle_Analysis.v6p.normalized.expression[,indiv_col]
head(heart)
Cells_EBV.transformed_lymphocytes_Analysis.v6p.normalized.expression
liver <- Liver_Analysis.v6p.normalized.expression[,indiv_col]
lung <- Lung_Analysis.v6p.normalized.expression[,indiv_col]
pancreas <- Pancreas_Analysis.v6p.normalized.expression[,indiv_col]
dim(LCL)
dim(heart)
dim(liver)
dim(lung)
dim(pancreas)
intersect(LCL$gene_id, heart$gene_id)
intersect(intersect(intersect(intersect(LCL$gene_id, heart$gene_id), liver$gene_id), lung$gene_id), pancreas$gene_id)
common_geneid <- intersect(intersect(intersect(intersect(LCL$gene_id, heart$gene_id), liver$gene_id), lung$gene_id), pancreas$gene_id)
length(common_geneid)
which(LCL$gene_id %in% common_geneid)
length(common_geneid)
LCL_17542 <- which(LCL$gene_id %in% common_geneid)
LCL_17542 <- which(LCL$gene_id %in% common_geneid)
LCL_17542_df <- LCL[LCL_17542,]
head(LCL_17542_df)
dim(LCL_17542_df)
LCL_17542 <- which(LCL$gene_id %in% common_geneid)
LCL_17542_df <- LCL[LCL_17542,]
dim(LCL_17542_df)
heart_17542 <- which(heart$gene_id %in% common_geneid)
heart_17542_df <- heart[heart_17542,]
dim(heart_17542_df)
liver_17542 <- which(liver$gene_id %in% common_geneid)
liver_17542_df <- liver[liver_17542,]
dim(liver_17542_df)
lung_17542 <- which(lung$gene_id %in% common_geneid)
lung_17542_df <- lung[lung_17542,]
dim(lung_17542_df)
pancreas_17542 <- which(pancreas$gene_id %in% common_geneid)
pancreas_17542_df <- pancreas[pancreas_17542,]
dim(pancreas_17542_df)
head(pancreas_17542_df)
LCL_var <- as.data.frame(apply(as.data.frame(LCL_17542_df[,5:10]),1, var) )
colnames(LCL_var) <- c("Variance")
heart_var <- as.data.frame(apply(as.data.frame(heart_17542_df[,5:10]),1, var) )
colnames(heart_var) <- c("Variance")
liver_var <- as.data.frame(apply(as.data.frame(liver_17542_df[,5:10]),1, var) )
colnames(liver_var) <- c("Variance")
lung_var <- as.data.frame(apply(as.data.frame(lung_17542_df[,5:10]),1, var) )
colnames(lung_var) <- c("Variance")
pancreas_var <- as.data.frame(apply(as.data.frame(pancreas_17542_df[,5:10]),1, var) )
colnames(pancreas_var) <- c("Variance")
LCL_log_var <- log2(LCL_var)
liver_log_var <- log2(liver_var)
lung_log_var <- log2(lung_var)
pancreas_log_var <- log2(pancreas_var)
heart_log_var <- log2(heart_var)
gtex_log_var <- rbind(as.data.frame(LCL_log_var), as.data.frame(liver_log_var), as.data.frame(lung_log_var), as.data.frame(pancreas_log_var), as.data.frame(heart_log_var))
gtex_var_labels <- cbind(gtex_log_var, labels)
LCL_log_var <- log2(LCL_var)
liver_log_var <- log2(liver_var)
lung_log_var <- log2(lung_var)
pancreas_log_var <- log2(pancreas_var)
heart_log_var <- log2(heart_var)
# Make labels
labels1 <- array("LCL", dim = c(17542, 1))
labels2 <- array("Liver", dim = c(17542, 1))
labels3 <- array("Lung", dim = c(17542, 1))
labels4 <- array("Pancreas", dim = c(17542, 1))
labels5 <- array("Heart", dim = c(17542, 1))
# Combine labels
labels9 <- rbind(labels1, labels2, labels3, labels4, labels5)
labels <- as.numeric(as.factor(labels9))
# Combine variances
gtex_log_var <- rbind(as.data.frame(LCL_log_var), as.data.frame(liver_log_var), as.data.frame(lung_log_var), as.data.frame(pancreas_log_var), as.data.frame(heart_log_var))
# Make df for boxplot
gtex_var_labels <- cbind(gtex_log_var, labels)
p <- ggplot(gtex_var_labels, aes(x = factor(labels), y = gtex_log_var))
library("ggplot2")
gtex_var_labels <- cbind(gtex_log_var, labels)
p <- ggplot(gtex_var_labels, aes(x = factor(labels), y = gtex_log_var))
p <- p + geom_violin(aes(fill = factor(labels)), show.legend = FALSE) + geom_boxplot(aes(fill = factor(labels)), show.legend = FALSE, outlier.shape = NA,width=0.2) + theme_bw() + scale_y_continuous(trans = "log2") + ggtitle("Variance for each gene by species and day") + xlab("Species-Day Pair") + ylab("Variance for each gene")
p
summary(LCL_log_var)
summary(heart_log_var)
summary(liver_log_var)
summary(lung_log_var)
summary(pancreas_log_var)
p <- ggplot(gtex_var_labels, aes(x = factor(labels), y = gtex_log_var))
p <- p + geom_violin(aes(fill = factor(labels)), show.legend = FALSE) + geom_boxplot(aes(fill = factor(labels)), show.legend = FALSE, outlier.shape = NA,width=0.2) + theme_bw() + scale_y_continuous(trans = "log2") + xlab("GTEx Tissue") + ylab(expression(bold('log'[2]*' variance of normalized gene expression (for each gene)')))
p <- p + scale_x_discrete(labels=c("1" = "LCL", "2" = "Liver", "3" = "Lung", "4" = "Pancreas", "5" = "Heart"))
p
bjp<-
theme(
axis.text.y =  element_text(size = 9,face = "bold",color = "black"),
axis.title.y = element_text(size = 10,face = "bold",color = "black"),
axis.text.x =  element_text(size = 9,face = "bold",color = "black"),
axis.title.x = element_text(size = 10,face = "bold",color = "black"),
plot.title = element_text(size = 13, face = "bold"))
p <- p + scale_x_discrete(labels=c("1" = "LCL", "2" = "Liver", "3" = "Lung", "4" = "Pancreas", "5" = "Heart")) + bjp
p <- ggplot(gtex_var_labels, aes(x = factor(labels), y = gtex_log_var))
p <- p + geom_violin(aes(fill = factor(labels)), show.legend = FALSE) + geom_boxplot(aes(fill = factor(labels)), show.legend = FALSE, outlier.shape = NA,width=0.2) + theme_bw() + scale_y_continuous(trans = "log2") + xlab("GTEx Tissue") + ylab(expression(bold('log'[2]*' variance of normalized gene expression (for each gene)')))
p <- p + scale_x_discrete(labels=c("1" = "LCL", "2" = "Liver", "3" = "Lung", "4" = "Pancreas", "5" = "Heart")) + bjp
p
LCL_log_var <- log2(LCL_var)
liver_log_var <- log2(liver_var)
lung_log_var <- log2(lung_var)
pancreas_log_var <- log2(pancreas_var)
heart_log_var <- log2(heart_var)
# Make labels
labels1 <- array("LCL", dim = c(17542, 1))
labels2 <- array("Liver", dim = c(17542, 1))
labels3 <- array("Lung", dim = c(17542, 1))
labels4 <- array("Pancreas", dim = c(17542, 1))
labels5 <- array("Heart", dim = c(17542, 1))
# Combine labels
labels9 <- rbind(labels1, labels2, labels3, labels4, labels5)
labels <- as.numeric(as.factor(labels9))
# Combine variances
gtex_log_var <- rbind(as.data.frame(LCL_log_var), as.data.frame(liver_log_var), as.data.frame(lung_log_var), as.data.frame(pancreas_log_var), as.data.frame(heart_log_var))
# Make df for boxplot
gtex_var_labels <- cbind(gtex_log_var, labels)
p <- ggplot(gtex_var_labels, aes(x = factor(labels), y = gtex_log_var))
p <- p + geom_violin(aes(fill = factor(labels)), show.legend = FALSE) + geom_boxplot(aes(fill = factor(labels)), show.legend = FALSE, outlier.shape = NA,width=0.2) + theme_bw() + scale_y_continuous(trans = "log2") + xlab("GTEx Tissue") + ylab(expression(bold('log'[2]*' variance of normalized gene expression (for each gene)')))
p <- p + scale_x_discrete(labels=c("1" = "LCL", "2" = "Liver", "3" = "Lung", "4" = "Pancreas", "5" = "Heart")) + bjp
p
summary(gtex_var_labels)
p <- ggplot(gtex_var_labels, aes(x = factor(labels), y = gtex_log_var))
p <- p + geom_violin(aes(fill = factor(labels)), show.legend = FALSE) + geom_boxplot(aes(fill = factor(labels)), show.legend = FALSE, outlier.shape = NA,width=0.2) + theme_bw() + xlab("GTEx Tissue") + ylab(expression(bold('log'[2]*' variance of normalized gene expression (for each gene)')))
p <- p + scale_x_discrete(labels=c("1" = "LCL", "2" = "Liver", "3" = "Lung", "4" = "Pancreas", "5" = "Heart")) + bjp
p
median(LCL_log_var)
median(liver_log_var)
median(lung_log_var)
median(pancreas_log_var)
median(heart_log_var)
median(as.numeric(LCL_log_var))
str(LCL_log_var )
median(LCL_log_var[,1])
median(liver_log_var[,-1])
median(liver_log_var[,1])
median(lung_log_var[,1])
median(pancreas_log_var[,1])
median(heart_log_var[,1])
p <- ggplot(gtex_var_labels, aes(x = factor(labels), y = gtex_log_var))
p <- p + geom_violin(aes(fill = factor(labels)), show.legend = FALSE) + geom_boxplot(aes(fill = factor(labels)), show.legend = FALSE, outlier.shape = NA,width=0.2) + theme_bw() + xlab("GTEx Tissue") + ylab(expression(bold('log'[2]*' variance of normalized gene expression (for each gene)'))) + ggtitle(expression(bold('log'[2]*' variance of normalized gene expression (n = 17,542 genes) for 5 GTEx tissues')))
p <- p + scale_x_discrete(labels=c("1" = "LCL", "2" = "Liver", "3" = "Lung", "4" = "Pancreas", "5" = "Heart")) + bjp
p
t.test(LCL_log_var, liver_log_var)
t.test(LCL_log_var, lung_log_var)
?t.test
t.test(LCL_log_var, liver_log_var, alternative = c("greater"))
t.test(LCL_log_var, liver_log_var, alternative = c("less"))
t.test(LCL_log_var, liver_log_var, alternative = c("greater"))
t.test(LCL_log_var, liver_log_var, alternative = c("less"))
t.test(LCL_log_var, liver_log_var, alternative = c("two.sided"))
t.test(LCL_log_var, heart_log_var, alternative = c("two.sided"))
t.test(LCL_log_var, heart_log_var, alternative = c("less"))
t.test(LCL_log_var, heart_log_var, alternative = c("greater"))
t.test(LCL_log_var, liver_log_var, alternative = c("greater"))
t.test(LCL_log_var, heart_log_var, alternative = c("greater"))
plot(LCL_17542_df[,5])
hist(LCL_17542_df[,5])
hist(LCL_17542_df[,5:10])
LCL_17542_df[,5:10]
hist(as.numeric(LCL_17542_df[,5:10]))
hist(LCL_17542_df[,5:6])
hist(LCL_17542_df[,6])
p <- ggplot(gtex_var_labels, aes(x = factor(labels), y = gtex_log_var))
p <- p + geom_violin(aes(fill = factor(labels)), show.legend = FALSE) + geom_boxplot(aes(fill = factor(labels)), show.legend = FALSE, outlier.shape = NA,width=0.2) + theme_bw() + xlab("GTEx Tissue") + ylab(expression(bold('log'[2]*' variance of normalized gene expression (for each gene)')))
p <- p + scale_x_discrete(labels=c("1" = "LCL", "2" = "Liver", "3" = "Lung", "4" = "Pancreas", "5" = "Heart")) + bjp
p
p <- ggplot(gtex_var_labels, aes(x = factor(labels), y = gtex_log_var))
p <- p + geom_violin(aes(fill = factor(labels)), show.legend = FALSE) + geom_boxplot(aes(fill = factor(labels)), show.legend = FALSE, outlier.shape = NA,width=0.2) + theme_bw() + xlab("GTEx Tissue") + ylab(expression(bold('log'[2]*' variance of normalized gene expression (for each gene)')))
p <- p + scale_x_discrete(labels=c("1" = "LCL", "2" = "Liver", "3" = "Lung", "4" = "Pancreas", "5" = "Heart")) + bjpm
p
getwd()
setwd("~/Desktop/Reg_Evo_Primates/analysis")
setwd("~/Desktop/Reg_Evo_Primates/analysis")
library("gplots")
library("ggplot2")
library("RColorBrewer")
library("scales")
library("edgeR")
library("R.utils")
library("plyr")
library("limma")
library("gridExtra")
library("VennDiagram")
source("functions.R")
library(ashr)
library(ggplot2)
# Set directory to save the data
data_dir <- "../data"
# Load colors
colors <- colorRampPalette(c(brewer.pal(9, "Blues")[1],brewer.pal(9, "Blues")[9]))(100)
pal <- c(brewer.pal(9, "Set1"), brewer.pal(8, "Set2"), brewer.pal(12, "Set3"))
# Retrieve RIN score for each sample
RNA_seq_info <- read.csv("../data/RNA_seq_info.csv")
RIN <- as.data.frame(RNA_seq_info[,22])
RIN <- as.matrix(RIN)
colnames(RIN) <- c("RIN")
# Retrieve sample information
samples <- read.delim("../data/Sample_info_RNAseq_limma.txt")
# Eliminate H1H
samples <- samples[-17,]
dim(samples)
# Label species and tissues
species <- samples$Species
length(species)
tissue <- samples$Tissue
length(tissue)
design <- model.matrix(~ species*tissue + RIN)
colnames(design)[1] <- "Intercept"
colnames(design)[2] <- "Human"
colnames(design)[3] <- "Rhesus"
colnames(design)[4] <- "Kidney"
colnames(design)[5] <- "Liver"
colnames(design)[6] <- "Lung"
colnames(design)[8] <- "H_by_K"
colnames(design)[9] <- "R_by_K"
colnames(design)[10] <- "H_by_Li"
colnames(design)[11] <- "R_by_Li"
colnames(design)[12] <- "H_by_Lu"
colnames(design)[13] <- "R_by_Lu"
# Look at the number of samples in each column
colSums(design)
counts_genes_in_cutoff <- read.delim("../data/counts_12184.txt")
# TMM
dge_in_cutoff <- DGEList(counts=as.matrix(counts_genes_in_cutoff), genes=rownames(counts_genes_in_cutoff), group = as.character(t(labels)))
dge_in_cutoff <- calcNormFactors(dge_in_cutoff)
cpm_in_cutoff <- cpm(dge_in_cutoff, normalized.lib.sizes=TRUE, log=TRUE)
head(cpm_in_cutoff)
hist(cpm_in_cutoff, xlab = "Log2(CPM)", main = "Log2(CPM) values for genes meeting the filtering criteria", breaks = 100 )
#design <- model.matrix(~ as.factor(tissue) + as.factor(species) + RIN)
tissue <- samples$Tissue
species <- samples$Species
design <- model.matrix(~ tissue*species + RIN)
colnames(design)[1] <- "Intercept"
# Rename columns of the contrast matrix
colnames(design)[2] <- "kidney"
colnames(design)[3] <- "liver"
colnames(design)[4] <- "lung"
colnames(design)[5] <- "human"
colnames(design)[6] <- "rhesus"
colnames(design)[8] <- "kidneyHuman"
colnames(design)[9] <- "liverHuman"
colnames(design)[10] <- "lungHuman"
colnames(design)[11] <- "kidneyRhesus"
colnames(design)[12] <- "liverRhesus"
colnames(design)[13] <- "lungRhesus"
# Look at the number of samples in each column
colSums(design)
counts_genes_in_cutoff <- read.delim("../data/counts_12184.txt")
cpm_12184 <- read.delim("../data/cpm_12184.txt")
# TMM
dge_in_cutoff <- DGEList(counts=as.matrix(counts_genes_in_cutoff), genes=rownames(counts_genes_in_cutoff), group = as.character(t(labels)))
dge_in_cutoff <- calcNormFactors(dge_in_cutoff)
cpm_in_cutoff <- cpm(dge_in_cutoff, normalized.lib.sizes=TRUE, log=TRUE)
head(cpm_in_cutoff)
hist(cpm_in_cutoff, xlab = "Log2(CPM)", main = "Log2(CPM) values for genes meeting the filtering criteria", breaks = 100 )
# Voom with individual as a random variable
cpm.voom.cyclic <- voom(dge_in_cutoff, design, normalize.method="cyclicloess", plot=T)
corfit <- duplicateCorrelation(cpm.voom.cyclic, design, block=samples$Individual)
library("gplots")
library("ggplot2")
library("RColorBrewer")
library("scales")
library("edgeR")
library("R.utils")
library("plyr")
library("limma")
library("gridExtra")
library("VennDiagram")
source("functions.R")
library(ashr)
library(ggplot2)
# Set directory to save the data
data_dir <- "../data"
# Load colors
colors <- colorRampPalette(c(brewer.pal(9, "Blues")[1],brewer.pal(9, "Blues")[9]))(100)
pal <- c(brewer.pal(9, "Set1"), brewer.pal(8, "Set2"), brewer.pal(12, "Set3"))
# Retrieve RIN score for each sample
RNA_seq_info <- read.csv("../data/RNA_seq_info.csv")
RIN <- as.data.frame(RNA_seq_info[,22])
RIN <- as.matrix(RIN)
colnames(RIN) <- c("RIN")
# Retrieve sample information
samples <- read.delim("../data/Sample_info_RNAseq_limma.txt")
# Eliminate H1H
samples <- samples[-17,]
dim(samples)
# Label species and tissues
species <- samples$Species
length(species)
tissue <- samples$Tissue
length(tissue)
labels <- paste(samples$Species, samples$Tissue, sep=" ")
design <- model.matrix(~ species*tissue + RIN)
colnames(design)[1] <- "Intercept"
colnames(design)[2] <- "Human"
colnames(design)[3] <- "Rhesus"
colnames(design)[4] <- "Kidney"
colnames(design)[5] <- "Liver"
colnames(design)[6] <- "Lung"
colnames(design)[8] <- "H_by_K"
colnames(design)[9] <- "R_by_K"
colnames(design)[10] <- "H_by_Li"
colnames(design)[11] <- "R_by_Li"
colnames(design)[12] <- "H_by_Lu"
colnames(design)[13] <- "R_by_Lu"
# Look at the number of samples in each column
colSums(design)
counts_genes_in_cutoff <- read.delim("../data/counts_12184.txt")
# TMM
dge_in_cutoff <- DGEList(counts=as.matrix(counts_genes_in_cutoff), genes=rownames(counts_genes_in_cutoff), group = as.character(t(labels)))
dge_in_cutoff <- calcNormFactors(dge_in_cutoff)
cpm_in_cutoff <- cpm(dge_in_cutoff, normalized.lib.sizes=TRUE, log=TRUE)
head(cpm_in_cutoff)
hist(cpm_in_cutoff, xlab = "Log2(CPM)", main = "Log2(CPM) values for genes meeting the filtering criteria", breaks = 100 )
# Voom with individual as a random variable
cpm.voom.cyclic <- voom(dge_in_cutoff, design, normalize.method="cyclicloess", plot=T)
corfit <- duplicateCorrelation(cpm.voom.cyclic, design, block=samples$Individual)
corfit$consensus.correlation
corfit.consensus <- 0.2197275
cpm.voom.cyclic <- voom(dge_in_cutoff, design, normalize.method="cyclicloess", plot=TRUE, block=samples$Individual, correlation=corfit.consensus)
fit.cyclic.norm <- lmFit(cpm.voom.cyclic, design, plot = TRUE, block=samples$Individual, correlation=corfit$consensus)
fit.cyclic.norm <- eBayes(fit.cyclic.norm)
limma::plotMA(fit.cyclic.norm, array=1, xlab="average coefficient", ylab="estimated coefficient")
hist(fit.cyclic.norm$stdev.unscaled * fit.cyclic.norm$sigma, breaks=100)
hist(log2(fit.cyclic.norm$stdev.unscaled * fit.cyclic.norm$sigma), breaks=100)
boxplot(log2(fit.cyclic.norm$stdev.unscaled * fit.cyclic.norm$sigma))
## This seems to be pretty comparable between conditions. The human heart is higher, probably because of H1H missing and H3H with a bit strange behavior
stderror <- log2(fit.cyclic.norm$stdev.unscaled * fit.cyclic.norm$sigma)
boxplot(list(stderror[,1:4], stderror[,5:8], stderror[,9:12]))
## A bit higher for human, and a bit lower for rhesus
boxplot(list(stderror[,2:4], stderror[,6:8], stderror[,8:12])) ## excluding heart samples
cm1 <- makeContrasts(H_K_inter_CH = H_by_K,
R_K_inter_CH = R_by_K,
H_Li_inter_CH = H_by_Li,
R_Li_inter_CH = R_by_Li,
H_Lu_inter_CH = H_by_Lu,
R_Lu_inter_CH = R_by_Lu,
levels = design)
# Implement contrasts
contrasts_each_species <- contrasts.fit(fit.cyclic.norm, cm1)
fit1 <- eBayes(contrasts_each_species)
top3 <- list(H_K_inter =topTable(fit1, coef=1, adjust="BH", number=Inf, sort.by="none"),
R_K_inter =topTable(fit1, coef=2, adjust="BH", number=Inf, sort.by="none"),
H_Li_inter =topTable(fit1, coef=3, adjust="BH", number=Inf, sort.by="none"),
R_Li_inter =topTable(fit1, coef=4, adjust="BH", number=Inf, sort.by="none"),
H_Lu_inter =topTable(fit1, coef=5, adjust="BH", number=Inf, sort.by="none"),
R_Lu_inter =topTable(fit1, coef=6, adjust="BH", number=Inf, sort.by="none") )
# Set FDR level at 1%
FDR_level <- 0.01
## Significant interactions in Humans (baseline = chimp hearts)
mylist <- list()
mylist[["Kidney"]] <- row.names(top3[[names(top3)[1]]])[top3[[names(top3)[1]]]$adj.P.Val < FDR_level]
mylist[["Liver"]] <-  row.names(top3[[names(top3)[3]]])[top3[[names(top3)[3]]]$adj.P.Val < FDR_level]
mylist[["Lung"]] <- row.names(top3[[names(top3)[5]]])[top3[[names(top3)[5]]]$adj.P.Val < FDR_level]
# Make
dev.off()
Four_comp <- venn.diagram(mylist, filename= NULL, main="Significant interactions in Humans (FDR 1%)", cex=1.5 , fill = pal[1:3], lty=1, height=2000, width=3000)
grid.draw(Four_comp)
mylist <- list()
mylist[["Kidney"]] <- row.names(top3[[names(top3)[2]]])[top3[[names(top3)[2]]]$adj.P.Val < FDR_level]
mylist[["Liver"]] <-  row.names(top3[[names(top3)[4]]])[top3[[names(top3)[4]]]$adj.P.Val < FDR_level]
mylist[["Lung"]] <- row.names(top3[[names(top3)[6]]])[top3[[names(top3)[6]]]$adj.P.Val < FDR_level]
# Make
dev.off()
Four_comp <- venn.diagram(mylist, filename= NULL, main="Significant interactions in Rhesus (FDR 1%)", cex=1.5 , fill = pal[1:3], lty=1, height=2000, width=3000)
grid.draw(Four_comp)
mylist <- list()
mylist[["Kidney"]] <- row.names(top3[[names(top3)[1]]])[top3[[names(top3)[1]]]$adj.P.Val < FDR_level]
mylist[["Liver"]] <-  row.names(top3[[names(top3)[3]]])[top3[[names(top3)[3]]]$adj.P.Val < FDR_level]
mylist[["Lung"]] <- row.names(top3[[names(top3)[5]]])[top3[[names(top3)[5]]]$adj.P.Val < FDR_level]
# Make
dev.off()
Four_comp <- venn.diagram(mylist, filename= NULL, main="Significant interactions in Humans (FDR 1%)", cex=1.5 , fill = pal[1:3], lty=1, height=2000, width=3000)
grid.draw(Four_comp)
mylist <- list()
mylist[["Liver"]] <- row.names(top3[[names(top3)[5]]])[top3[[names(top3)[5]]]$adj.P.Val < FDR_level]
mylist[["Lung"]] <-  row.names(top3[[names(top3)[6]]])[top3[[names(top3)[6]]]$adj.P.Val < FDR_level]
mylist[["Heart"]] <- row.names(top3[[names(top3)[7]]])[top3[[names(top3)[7]]]$adj.P.Val < FDR_level]
mylist[["Kidney"]] <- row.names(top3[[names(top3)[8]]])[top3[[names(top3)[8]]]$adj.P.Val < FDR_level]
# Make
dev.off()
Four_comp <- venn.diagram(mylist, filename= NULL, main="DE genes between Humans and Rhesus (FDR 1%)", cex=1.5 , fill = pal[1:4], lty=1, height=2000, width=3000)
grid.draw(Four_comp)
dev.off()
Four_comp <- venn.diagram(mylist, filename= NULL, main="DE genes between Humans and Rhesus (FDR 1%)", cex=1.5 , lty=1, height=2000, width=3000)
grid.draw(Four_comp)
mylist <- list()
mylist[["Liver"]] <- row.names(top3[[names(top3)[5]]])[top3[[names(top3)[5]]]$adj.P.Val < FDR_level]
mylist[["Lung"]] <-  row.names(top3[[names(top3)[6]]])[top3[[names(top3)[6]]]$adj.P.Val < FDR_level]
mylist[["Heart"]] <- row.names(top3[[names(top3)[7]]])[top3[[names(top3)[7]]]$adj.P.Val < FDR_level]
mylist[["Kidney"]] <- row.names(top3[[names(top3)[8]]])[top3[[names(top3)[8]]]$adj.P.Val < FDR_level]
dev.off()
Four_comp <- venn.diagram(mylist, filename= NULL, main="DE genes between Humans and Rhesus (FDR 1%)", cex=1.5 ,  lty=1, height=2000, width=3000)
grid.draw(Four_comp)
exp <- t(as.data.frame(cpm_12184[grepl("ENSG00000008282", rownames(cpm_12184)), ]))
make_exp_df <- as.data.frame(cbind(exp, species, tissue), stringsAsFactors = F)
make_exp_df[,1] <- as.numeric(make_exp_df[,1])
levels(make_exp_df$Species) <- c("Chimpanzee", "Human", "Rhesus")
head(make_exp_df)
summary(make_exp_df)
make_exp_df <- as.data.frame(cbind(exp, species, tissue), stringsAsFactors = F)
exp <- t(as.data.frame(cpm_12184[grepl("ENSG00000008282", rownames(cpm_12184)), ]))
make_exp_df <- as.data.frame(cbind(exp, species, tissue), stringsAsFactors = F)
make_exp_df[,1] <- as.numeric(make_exp_df[,1])
#levels(make_exp_df$Species) <- c("Chimpanzee", "Human", "Rhesus")
colnames(make_exp_df) <- c("Normalized Gene Expression", "Species", "Tissue")
ggplot(make_exp_df, aes(x=as.factor(Tissue), y=make_exp_df[,1], fill=as.factor(Tissue))) + geom_boxplot() + facet_wrap(~Species)  + xlab("Tissue") + ylab("Normalized Gene Expression") + scale_x_discrete(labels=c("Heart","Kidney","Liver", "Lung")) + bjp + theme(legend.position="none") + ggtitle("SYPL (ENSG00000008282)")
ggplot(make_exp_df, aes(x=as.factor(Tissue), y=make_exp_df[,1], fill=as.factor(Tissue))) + geom_boxplot() + facet_wrap(~Species)  + xlab("Tissue") + ylab("Normalized Gene Expression") + scale_x_discrete(labels=c("Heart","Kidney","Liver", "Lung"))
